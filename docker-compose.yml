version: '3'
services:
  
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: app
    container_name: iot-app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: de
    working_dir: /var/www
    volumes:
      - /var/www/vendor
      - /var/www/node_modules
      - /var/www/bootstrap/cache
      - ./:/var/www
      - ./dockerconfig/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./certbot/www:/var/www/certbot/:ro
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: iot-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "81:81"
      - "444:443"
    volumes:
      - ./:/var/www
      - ./dockerconfig/nginx/conf.d/:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:latest
    container_name: iot-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./dockerconfig/mysql/my.cnf:/etc/mysql/my.cnf
      - ./dockerconfig/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local